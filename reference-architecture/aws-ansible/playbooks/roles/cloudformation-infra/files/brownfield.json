{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "VpcName": {
      "Type": "String",
      "Default": "ose-on-aws"
    },
    "S3BucketName": {
      "Type": "String"
    },
    "S3User": {
       "Type": "String"
    },
    "MasterApiPort": {
      "Type": "Number"
    },
    "MasterHealthTarget": {
      "Type": "String"
    },
    "Route53HostedZone": {
      "Type": "String"
    },
    "PublicHostedZone": {
      "Type": "String"
    },
    "MasterHostname01": {
      "Type": "String"
    },
     "Region": {
      "Type": "String",
      "Default": "us-west-1"
    },
    "MasterClusterPublicHostname": {
      "Type": "String"
    },
    "MasterClusterHostname": {
      "Type": "String"
    },
    "AppWildcardDomain": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "MasterInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "AmiId": {
      "Type": "AWS::EC2::Image::Id"
    },
    "MasterRootVolSize": {
      "Type": "String",
      "Default": "10"
    },
    "MasterDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "MasterEtcdVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "MasterEmptyVolSize": {
      "Type": "String",
      "Default": "5"
    },
    "MasterEtcdVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "MasterEmptyVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "MasterUserData": {
      "Type": "String"
    },
    "MasterDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "MasterRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "InfraRouterInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "InfraRegistryInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "InfraGlusterInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "InfraRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "InfraRouterRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "InfraRegistryRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "InfraGlusterRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "InfraDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "InfraRouterDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "InfraRegistryDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "InfraGlusterDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "InfraGlusterDataVolSize": {
      "Type": "String",
      "Default": "500"
    },
    "InfraDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraRouterDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraRegistryDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraGlusterDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraGlusterDataVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraRouterRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraRegistryRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraGlusterRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "AppNodeInstanceType": {
      "Type": "String",
      "Default": "t2.medium"
    },
    "NodeRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "NodeUserData": {
      "Type": "String"
    },
    "NodeDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "NodeDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "NodeEmptyVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "NodeEmptyVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "NodeRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "Vpc": {
      "Type": "String"
    },
    "PrivateSubnet1": {
      "Type": "String"
    },
    "PrivateSubnet2": {
      "Type": "String"
    },
    "PrivateSubnet3": {
      "Type": "String"
    }
  },
  "Resources": {
    "EtcdSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "etcd",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_etcd_sg"} ]
      }
    },
    "InfraElbSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Infra Load Balancer",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_router_sg"} ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "MasterIntElbSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Master Internal Load Balancer",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_internal_elb_master_sg"} ]
      }
    },
    "InfraSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Infra",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_infra_node_sg"} ]
      }
    },
    "NodeSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Node",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_node_sg"} ]
      }
    },
    "MasterSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Master",
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ {"Key": "Name", "Value": "ose_master_sg"} ]
      }
    },
    "InfraElbEgressHTTP": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "InfraElbSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "DestinationSecurityGroupId": { "Fn::GetAtt": [ "InfraSG", "GroupId" ] }
      }
    },
    "InfraElbEgressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "InfraElbSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "DestinationSecurityGroupId": { "Fn::GetAtt": [ "InfraSG", "GroupId" ] }
      }
    },
    "MasterIntElbEgressAPI": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterIntElbSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "DestinationSecurityGroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] }
      }
    },
    "MasterIntElbIngressMasters": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterIntElbSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] }
      }
    },
    "MasterIntElbIngressNodes": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterIntElbSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "InfraIngressHTTP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "InfraSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "InfraElbSG", "GroupId" ] }
      }
    },
    "InfraIngressHTTPS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "InfraSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "InfraElbSG", "GroupId" ] }
      }
    },
    "NodeIngressMasterKubelet": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "10250",
        "ToPort": "10250",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] }
      }
    },
    "NodeIngressNodeKubelet": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "10250",
        "ToPort": "10250",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "NodeIngressNodeSSHTCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.121.112.0/20"
      }
    },
    "NodeIngressNodeVXLAN": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] },
        "IpProtocol": "udp",
        "FromPort": "4789",
        "ToPort": "4789",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "MasterIngressIntLB": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "MasterIntElbSG", "GroupId" ] }
      }
    },
    "MasterIngressNodesDNSUDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "udp",
        "FromPort": "8053",
        "ToPort": "8053",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "MasterIngressNodesDNSTCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "8053",
        "ToPort": "8053",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "MasterIngressNodesAPITCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "LoggingTCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "24224",
        "ToPort": "24224",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "LoggingUDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "udp",
        "FromPort": "24224",
        "ToPort": "24224",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "NodeSG", "GroupId" ] }
      }
    },
    "MasterIngressMastersAPITCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": { "Ref": "MasterApiPort" },
        "ToPort": { "Ref": "MasterApiPort" },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] }
      }
    },
    "EtcdIngressEtcd": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "EtcdSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "2379",
        "ToPort": "2379",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "EtcdSG", "GroupId" ] }
      }
    },
    "EtcdIngressMasters": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "EtcdSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "2379",
        "ToPort": "2379",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "MasterSG", "GroupId" ] }
      }
    },
    "EtcdIngressEtcdPeer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId": { "Fn::GetAtt": [ "EtcdSG", "GroupId" ] },
        "IpProtocol": "tcp",
        "FromPort": "2380",
        "ToPort": "2380",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "EtcdSG", "GroupId" ] }
      }
    },
    "MasterIntElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "Tags": [ {"Key": "Name", "Value": "ose_internal_master_elb"} ],
        "HealthCheck": {
          "HealthyThreshold" : "2",
          "Interval" : "5",
          "Target" : { "Ref": "MasterHealthTarget" },
          "Timeout" : "2",
          "UnhealthyThreshold" : "2"
        },
        "Listeners":[
          {
            "InstancePort": { "Ref" : "MasterApiPort" },
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": { "Ref" : "MasterApiPort" },
            "Protocol": "TCP"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [ { "Ref": "MasterIntElbSG" } ],
        "Subnets": [
          {"Ref": "PrivateSubnet1"},
          {"Ref": "PrivateSubnet2"}
            ],
        "Instances": [
          {"Ref": "Master01"},
          {"Ref": "Master02"},
          {"Ref": "Master03"}
            ]
        }
    },
    "InfraElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "Tags": [ {"Key": "Name", "Value": "ose_router_elb"} ],
        "HealthCheck": {
          "HealthyThreshold" : "2",
          "Interval" : "5",
          "Target" : "TCP:443",
          "Timeout" : "2",
          "UnhealthyThreshold" : "2"
        },
        "Listeners":[
          {
            "InstancePort": "443",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "443",
            "Protocol": "TCP"
          },
          {
            "InstancePort": "80",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [ { "Ref": "InfraElbSG" } ],
        "Subnets": [
          {"Ref": "PrivateSubnet1"},
          {"Ref": "PrivateSubnet2"}
        	],
        "Instances": [
          {"Ref": "InfraRouterNode01"},
          {"Ref": "InfraRouterNode02"},
          {"Ref": "InfraRouterNode03"}
            ]
      }
    },
    "NodePolicy": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "node-describe",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                     "ec2:Describe*",
                     "ec2:AttachVolume",
                     "ec2:DetachVolume"
                  ], 
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "MasterPolicy": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "master-ec2-all",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                     "ec2:*",
                     "elasticloadbalancing:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "MasterInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "MasterPolicy" } ]
      }
    },
    "NodeInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "NodePolicy" } ]
      }
    },
    "RegistryBucket": {
    "Type": "AWS::S3::Bucket",
    "Properties" : {
       "BucketName": { "Ref": "S3BucketName"}
                   }
     },
   "DNS": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "HostedZoneConfig": {
      "Comment": "private hosted zone"
    },
    "Name": { "Ref": "Route53HostedZone" },
    "VPCs": [{
      "VPCId": { "Ref": "Vpc" },
      "VPCRegion": {"Ref" : "Region" }
    }]
  }
},
    "Route53Records": {
      "Type": "AWS::Route53::RecordSetGroup",
      "DependsOn": [
        "DNS",
        "InfraElb",
        "MasterIntElb",
        "Master01",
        "Master02",
        "Master03"
      ],
      "Properties": {
        "HostedZoneName": { "Ref": "Route53HostedZone" },
        "RecordSets": [
          {
            "Name": { "Ref": "MasterClusterHostname" },
            "Type": "A",
            "AliasTarget": {
                "HostedZoneId": { "Fn::GetAtt" : ["MasterIntElb", "CanonicalHostedZoneNameID"] },
                "DNSName": { "Fn::GetAtt" : ["MasterIntElb","DNSName"] }
            }
          },
          {
            "Name": { "Ref": "AppWildcardDomain" },
            "Type": "A",
            "AliasTarget": {
                "HostedZoneId": { "Fn::GetAtt" : ["InfraElb", "CanonicalHostedZoneNameID"] },
                "DNSName": { "Fn::GetAtt" : ["InfraElb","CanonicalHostedZoneName"] }
            }
          },
          {
            "Name": { "Ref": "MasterHostname01" },
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["Master01", "PrivateIp"] }]
          },
          {
            "Name":  "master02-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["Master02", "PrivateIp"] }]
          },
          {
            "Name":  "master03-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["Master03", "PrivateIp"] }]
          },
          {
            "Name":  "infrarouter01-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRouterNode01", "PrivateIp"] }]
          },
          {
            "Name":  "infrarouter02-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRouterNode02", "PrivateIp"] }]
          },
          {
            "Name":  "infrarouter03-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRouterNode03", "PrivateIp"] }]
          },
          {
            "Name":  "infraregistry01-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRegistryNode01", "PrivateIp"] }]
          },
          {
            "Name":  "infraregistry02-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRegistryNode02", "PrivateIp"] }]
          },
          {
            "Name":  "infraregistry03-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraRegistryNode03", "PrivateIp"] }]
          },
          {
            "Name":  "infragluster01-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraGlusterNode01", "PrivateIp"] }]
          },
          {
            "Name":  "infragluster02-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraGlusterNode02", "PrivateIp"] }]
          },
          {
            "Name":  "infragluster03-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["InfraGlusterNode03", "PrivateIp"] }]
          },
          {
            "Name":  "app01-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["AppNode01", "PrivateIp"] }]
          },
          {
            "Name":  "app02-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["AppNode02", "PrivateIp"] }]
          },
          {
            "Name":  "app03-c01.ocp.dev.frb.aws",
            "Type": "A",
			"TTL": "300",
		    "ResourceRecords": [{ "Fn::GetAtt" : ["AppNode03", "PrivateIp"] }]
          }
        ]
      }
    },
    "Master01" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "MasterUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "MasterInstanceType"},
          "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["MasterSG", "GroupId"] }, { "Fn::GetAtt" : ["EtcdSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
          "IamInstanceProfile": { "Ref": "MasterInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "master01-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "master"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterRootVolSize"},
              "VolumeType": {"Ref": "MasterRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterDockerVolSize"},
              "VolumeType": {"Ref": "MasterDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEtcdVolSize"},
              "VolumeType": {"Ref": "MasterEtcdVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEmptyVolSize"},
              "VolumeType": {"Ref": "MasterEmptyVolType"}
            }
          }
         ]
     }
  },
    "Master02" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "MasterUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "MasterInstanceType"},
          "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["MasterSG", "GroupId"] }, { "Fn::GetAtt" : ["EtcdSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet2"},
          "IamInstanceProfile": { "Ref": "MasterInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "master02-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "master"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterRootVolSize"},
              "VolumeType": {"Ref": "MasterRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterDockerVolSize"},
              "VolumeType": {"Ref": "MasterDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEtcdVolSize"},
              "VolumeType": {"Ref": "MasterEtcdVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEmptyVolSize"},
              "VolumeType": {"Ref": "MasterEmptyVolType"}
            }
          }
         ]
     }
   },
    "Master03" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "MasterUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "MasterInstanceType"},
          "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["MasterSG", "GroupId"] }, { "Fn::GetAtt" : ["EtcdSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet3"},
          "IamInstanceProfile": { "Ref": "MasterInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "master03-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "master"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterRootVolSize"},
              "VolumeType": {"Ref": "MasterRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterDockerVolSize"},
              "VolumeType": {"Ref": "MasterDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEtcdVolSize"},
              "VolumeType": {"Ref": "MasterEtcdVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "MasterEmptyVolSize"},
              "VolumeType": {"Ref": "MasterEmptyVolType"}
            }
          }
         ]
     }
   },
    "InfraRouterNode01" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRouterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infrarouter01-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infrarouter"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraRouterNode02" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRouterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet2"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infrarouter02-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infrarouter"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraRouterNode03" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRouterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet3"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infrarouter03-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infrarouter"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraRegistryNode01" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRegistryInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infraregistry01-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infraregistry"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraRegistryNode02" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRegistryInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet2"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infraregistry02-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infraregistry"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraRegistryNode03" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraRegistryInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet3"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infraregistry03-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infraregistry"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
    },
    "InfraGlusterNode01" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraGlusterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infragluster01-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infragluster"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "InfraGlusterDataVolSize"},
              "VolumeType": {"Ref": "InfraGlusterDataVolType"}
            }
          }
         ]
     }
    },
    "InfraGlusterNode02" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraGlusterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infragluster02-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infragluster"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "InfraGlusterDataVolSize"},
              "VolumeType": {"Ref": "InfraGlusterDataVolType"}
          }
         }
         ]
     }
    },
    "InfraGlusterNode03" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "InfraGlusterInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }, { "Fn::GetAtt" : ["InfraSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "infragluster03-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "infragluster"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdd",
            "Ebs": {
              "DeleteOnTermination": "false",
              "VolumeSize": {"Ref": "InfraGlusterDataVolSize"},
              "VolumeType": {"Ref": "InfraGlusterDataVolType"}
          }
         }
         ]
     }
    },
    "AppNode01" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "AppNodeInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet1"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "app01-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "app"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
 },
    "AppNode02" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "AppNodeInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet2"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "app02-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "app"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
   },
    "AppNode03" : {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "ImageId" : {"Ref": "AmiId"},
          "UserData": {"Ref": "NodeUserData"},
          "KeyName" : {"Ref": "KeyName"},
	      "InstanceType": {"Ref": "AppNodeInstanceType"},
		  "SecurityGroupIds": [{ "Fn::GetAtt" : ["NodeSG", "GroupId"] }],
          "SubnetId" : {"Ref": "PrivateSubnet3"},
		  "IamInstanceProfile": { "Ref": "NodeInstanceProfile" },
          "Tags": [
            { "Key": "Name",
              "Value": "app03-c01.ocp.dev.frb.aws"
            },
            { "Key": "openshift-role",
              "Value": "app"
            }
          ],
          "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdc",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeEmptyVolSize"},
              "VolumeType": {"Ref": "NodeEmptyVolType"}
            }
          }
         ]
     }
   },
    "S3UserName" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path" : "/",
        "UserName": { "Ref": "S3User" },
        "Policies" : [ {
          "PolicyName" : "accessalls3",
          "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement" : [ {
              "Effect" : "Allow",
              "Action" : [ "s3:*" ],
              "Resource": "*"
            } ]
          }
        } ]
      }
    },
    "CFNKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "S3UserName" }
      }
    }
  },
  "Outputs" : {
    "S3UserAccessId" : {
      "Value" : { "Ref" : "CFNKeys" },
      "Description" : "AWSAccessKeyId of new user"
    },
    "S3UserSecretKey" : {
      "Value" : { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]},
      "Description" : "AWSSecretKey of new S3"
    },
    "S3Bucket" : {
      "Value" : { "Ref" : "RegistryBucket"},
      "Description" : "Name of S3 bucket"
    }
 }
}
